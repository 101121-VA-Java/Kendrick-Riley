Node.js/npm
1.	What is Node.js?
Node.js is a free, open-sourced, cross-platform JavaScript run-time environment that lets developers write command line tools and server-side scripts outside of a browser.
2.	What is npm?
npm is a package manager for the JavaScript programming language maintained by npm, Inc. npm is the default package manager for the JavaScript runtime environment Node.js. 
3.	What is the package.json?
package.json - this file holds various metadata relevant to the project. This file is used to give information to npm that allows it to identify the project as well as handle the project's dependencies.
4.	What is the node_modules folder?
The node_modules folder contains libraries downloaded from npm.The node_modules folder is used to save all downloaded packages from NPM in your computer for the JavaScript project that you have.

TypeScript
1	What is TypeScript?
TypeScript is developed and maintained by Microsoft.TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale. 
2.	How does TypeScript relate to JavaScript? 
TypeScript is an open source syntactic superset of JavaScript that compiles to JavaScript (EcmaScript 3+).TypeScript works by adding enhanced syntax to JavaScript and then transforming it to JavaScript 
	- What are the major benefits of using it over JavaScript?
The main benefit of Typescript is that it offers the ability to add static types to your Javascript code. 
	- Can I run TypeScript in my browser?
To run TypeScript in a browser, it needs to be transpiled into JavaScript with the TypeScript compiler (tsc).
3.	List the data types of TypeScript
Number, Boolean, String, Void - TS specific- any- void- never- enums- tuple

Angular
- front-end framework
	- used to make dynamic, single page applications.A component-based framework for building scalable web applications
1.	What makes a “single page application” (SPA) different from a normal web page?
SPAs are faster than traditional web applications because they execute the logic in the web browser itself rather than on the server. And after the initial page load, only data is sent back and forth instead of the entire HTML that reduces the bandwidth.
2.	Explain the difference between server-side and client-side rendering?
Client-side rendering manages the routing dynamically without refreshing the page every time a user requests a different route. But server-side rendering is able to display a fully populated page on the first load for any route of the website, whereas client-side rendering displays a blank page first.
3.	What are some features of the Angular framework?
Cross-Platform. With Angular, you can develop progressive web applications (PWA). 
High Speed & Optimum Performance. ...
Angular Applications for Everyone. ...
MVC Architecture. ...
Efficient Two-Way Data Binding. ...
Less Code Framework. ...
Angular CLI (Command Line Interface) ...
CDK and Angular Material

4.	How would you create a new Angular project?
npm install -g @angular/cli, ng new my-app, cd my-app, ng serve --open
5.	What is a component? How would you create one? List some other commands using the Angular CLI
Components are the building blocks that compose an application. Create by typing Ng generate component. Some commands add, build, e2e(runs end to end test), generate
6.	What files make up a component? What is the “spec” file used for?
The HTML, css, spec typescript make up a component. This file is a unit testing file related to app component. This file is used along with other unit tests. It is run from Angular CLI by the command ng test.
7.	Explain the relevance of npm to Angular projects. Which file does npm use to track dependencies?
pm is the package manager for the Node JavaScript platform. It puts modules in place so that node can find them, and manages dependency conflicts intelligently.  usually in the project root, called package. json - this file holds various metadata relevant to the project. 
8.	List some decorators for Angular apps
A function that modifies a class or property definition. Decorators (also called annotations)
@NgModule.Defines a module that contains components, directives, pipes, and providers.
@Component.that associates it with a companion template.
@Injectable.Declares that a class has dependencies that should be injected into the constructor
@Directive.that can listen to and modify the behavior of other HTML elements
@Pipe.
@Input.decorator in order to pass information between a parent and a child components

9.	What is the lifecycle of a component? List some lifecycle hooks?
ngOnChanges(),ngOnInit()-Initialize the directive or component 
A component instance has a lifecycle that starts when Angular instantiates the component class and renders the component view. The lifecycle ends when Angular destroys the component instance and removes its rendered template from the DOM.
10.	What is a directive and what are the different types? How to tell these directives apart with syntax?
HTML attributes which tell angular to change the style or behavior of the Dom elements.. Components—directives with a template.Structural directives—change the DOM layout. Attribute directives—change the appearance or behavior of an element
11.	What is the benefit of using a directive like NgClass over the class attribute, or even property binding to the class attribute?
The NgClass directive syntax is concise and supports more complex logic, to allow us to have finer control over our class names.
12.	What is a pipe? A service?
@Pipe{} decorator and which defines a function that transforms input values to output values for display in a view. Service is code that can be reused across an application.increase modularity and reusability. he @Injectable() metadata allows the service class to be used
13.	How would you create a custom pipe? What about a service?
ng generate pipe custom. ng generate service crud.
14.	How does dependency injection work in Angular?
DI token. A lookup token associated with a dependency provider, for use with the dependency injection system.
15.	What is an Angular module? What properties should you set inside it?
Module in Angular refers to a place where you can group the components, directives, pipes, and services, which are related to the application
16.	How have you used the HttpClient? What methods does it have and what do they return?
Performs HTTP requests. This service is available as an injectable class, with methods to perform HTTP requests. delete(), request(), get(), head()HEAD request to execute on the server.
17.	What is an Observable? What’s the difference between it and a Promise?
Angular makes use of observables as an interface to handle a variety of common asynchronous operations.the Promise can provide a single value, whereas the Observable is a stream of values (from 0 to multiple values), you can apply RxJS operators
18.	What forms of data binding does Angular support? Explain the syntax for each
String Interpolation.  {{ code }}.
Property Binding. Need to binding.component.html,@Component({
  selector: 'app-binding',
  templateUrl: './binding.component.html',
  styleUrls: ['./binding.component.css'] 
Event Binding.  For example, clicking a button.- <someTag (event)='doSomething()'> </...>
Two-Way Data Binding. a combination of both Property and Event binding and it is a continuous - <input [(ngModel)]='someVar' /> in html documen
19.	What does Webpack do for your ng project?
Webpack is an open source JavaScript module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, 
20.	How would you implement routing in your project?
ng generate module app-routing --flat --module=app use The <router-outlet> tells the router where to display routed views.
21.	What is an EventEmitter and when would you use one?
 useful when you have some function that needs to execute “whenever this other thing happens.An event emitter is a pattern that listens to a named event, fires a callback, then emits that event with a value.
22.	How would you run your unit tests for an Angular project?
ng test- the Jasmine test framework.

SDLC
1.	What are the steps in the software development lifecycle?
- Requirement phase- Analysis phase- Design phase- Development phase- Testing phase- Deployment/maintenance phase(s)
2.	What is the difference between Waterfall and Agile methodologies? Explain the benefits and drawbacks of each
 In waterfall each phase must be completed before the next phase begins. Agile  breaking down the product into small incremental builds, provided in iterations
3.	List some of the principles declared in the Agile manifesto
Individuals and interactions over processes and tools, Working software over comprehensive documentation, Customer collaboration over contract negotiation, Responding to change over following a plan 
4.	What specific Agile frameworks exist? What are the main features of each?
- Artifacts(documents)- Product Backlog- Sprint Backlog, Scrum team- Product Ownen- Development Team- Scrum master, Ceremonies (meetings)- Sprint Planning - Daily Scrum(Daily standups)
5.	What is the Scrum process? Explain each of the Scrum ceremonies
Same as above!!!
6.	How long is a typical sprint?
sprint is determined by the scrum master, Traditionally, a sprint lasts 2 weeks to 30 days.
7.	What is a “standup” and what should you report about your work?
- Daily meeting for the dev team- what did you do yesterday?- what did you do today?- Any blockers?
8.	What is the role of a “Scrum master” in a project? What about the “Product owner”?- responsible for the product resulting from the dev team- resonsible for managing the product backlog
- Facilitator to the scrum dev team- clarifies questions, organize activities, Product Owner
9.	Explain the following metrics/charts: sprint velocity, burndown chart
Burndown chart- graph displaying the progress over the course of a sprint- Story point remaining vs time
- Sprint Review- Demo of the product resulting from the sprint, "working software"- Scrum team and stake holders collaborate on inspecting what was done and update the product backlog as required
10.	What is a Scrum board?
A Scrum board is the face of your process, a visual status of your sprint, showing your work split across different stages of your workflow
